---
name: Release

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: How major the changes are [ major | minor | patch | prerelease ]
        required: true
        default: patch

jobs:
  bump-commit:
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.new-commit.outputs.version }}
      commit-id: ${{ steps.new-commit.outputs.commit-id }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: https://registry.npmjs.org/
          cache: yarn
      - name: Configure git credentials
        uses: OleksiyRudenko/gha-git-credentials@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.actor }}
          email: ${{ github.actor }}@users.noreply.github.com
      - run: yarn config set version-git-message "Release v%s"
      - run: yarn version --${{ github.event.inputs.version-type }} --preid beta
      - id: new-commit
        run: |
          echo "::set-output name=version::v$(node -pe "require('./package.json').version")"
          echo "::set-output name=commit-id::$(git log -1 --pretty=format:%H)"
      - name: push commit
        run: git push --follow-tags

  create-gh-release:
    runs-on: ubuntu-22.04
    needs: bump-commit
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump-commit.outputs.commit-id }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_commitish: ${{ needs.bump-commit.outputs.commit-id }}
          tag_name: ${{ needs.bump-commit.outputs.version }}
          release_name: Release ${{ needs.bump-commit.outputs.version }}
          draft: true
          prerelease: ${{ contains(github.event.inputs.version-type, 'pre') }}

  release-binaries:
    runs-on: ubuntu-22.04
    needs: create-gh-release
    strategy:
      fail-fast: true
      matrix:
        os: [alpine, linux, macos, win]
        arch: [x64, arm64]
        node-version: [16]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: https://registry.npmjs.org/
          cache: yarn
      - run: yarn
      - name: Build ${{ matrix.os }} ${{ matrix.arch }} binary
        run: |
          npx -y pkg \
            -a "webserver/index*","nexe-conf","node_modules/discord.js/src","node_modules/particles.js/particles.js","node_modules/particles.js/demo/js/app.js"
            -t node${{ matrix.node-version }}-${{ matrix.os }}-${{ matrix.arch }} \
            -o 2bored2wait-${{ matrix.os }}-${{ matrix.arch }} \
            --compress gzip \
            ./check.js
      - id: find-file-name
        run: |
          echo "::set-output name=file-name::$(ls 2bored2wait-${{ matrix.os }}-${{ matrix.arch }}*)"
      - name: Upload ${{ matrix.os }}-${{ matrix.arch }} binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-gh-release.outputs.upload_url }}
          asset_name: ${{ steps.find-file-name.outputs.file-name }}
          asset_path: ./${{ steps.find-file-name.outputs.file-name }}
          asset_content_type: application/octet-stream

  publish-release:
    runs-on: ubuntu-22.04
    needs: [release-binaries, create-gh-release]
    steps:
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create-gh-release.outputs.release_id }}

  build-docker:
    runs-on: ubuntu-22.04
    needs: bump-commit
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump-commit.outputs.commit-id }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm/v7,linux/arm64/v8,linux/arm/v6,linux/amd64,linux/ppc64le,linux/s390x
          push: true
          tags: 2bored2wait/2bored2wait:latest
      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: 2bored2wait/2bored2wait
